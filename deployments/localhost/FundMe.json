{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "s_priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "i_owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "s_addressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "s_funders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "s_priceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x87510536129a88e54f2e227d287725cd19f3ea5526a1e58aef89c59fee9f6bb7",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1030215",
        "logsBloom": "0x
        "blockHash": "0x4e5c6902b921140f1670eece5442cc21d9ee9058f90cc0c43dc2f67dcd31592b",
        "transactionHash": "0x87510536129a88e54f2e227d287725cd19f3ea5526a1e58aef89c59fee9f6bb7",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1030215",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "8a957ced084df7971b76ba37ce87975d",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Drachen\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// pragma solidity ^0.8.8;\\npragma solidity 0.8.8;\\n\\n//imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//error codes\\nerror FundMe__NotOwner();\\n\\n//Interfaces, Libraries, Contract\\n\\n/** @title A contract for crowd funding\\n *  @author Drachen\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConverter for uint256;\\n    // State Vairiables\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n    \\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n        // emit Funded(msg.sender, msg.value);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address [] memory funders = s_funders;\\n        for (uint256 funderIndex = 0; funderIndex<funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n         (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0xb2370b28adf2bbb33ac0afc9c6bae0eea9ecb89516f1bb1ac5771e93f48961af\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount, AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x138335cea84d46f4457fa79f51b3451b120442f29acfeaddc99ad2da996f3774\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012c4380380620012c4833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111456200017f60003960008181610345015281816105d1015261087501526111456000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101a05761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610305565b6040516100ba9190610a99565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610af7565b61032b565b6040516100f79190610b3d565b60405180910390f35b34801561010c57600080fd5b50610115610343565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b84565b610583565b60405161014b9190610bc0565b60405180910390f35b34801561016057600080fd5b506101696105c2565b6040516101769190610b3d565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e6105cf565b005b3480156101ac57600080fd5b506101b5610873565b6040516101c29190610bc0565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c38565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610c87565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610473576000600182815481106103ee576103ed610cdd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046b90610d0c565b9150506103cb565b50600067ffffffffffffffff81111561048f5761048e610d55565b5b6040519080825280602002602001820160405280156104bd5781602001602082028036833780820191505090505b50600190805190602001906104d3929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fa90610db5565b60006040518083038185875af1925050503d8060008114610537576040519150601f19603f3d011682016040523d82523d6000602084013e61053c565b606091505b5050905080610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e16565b60405180910390fd5b50565b6001818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068e575b5050505050905060005b8151811015610762576000828281518110610700576106ff610cdd565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610d0c565b9150506106e2565b50600067ffffffffffffffff81111561077e5761077d610d55565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600190805190602001906107c2929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e990610db5565b60006040518083038185875af1925050503d8060008114610826576040519150601f19603f3d011682016040523d82523d6000602084013e61082b565b606091505b505090508061086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690610e16565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108a3836108d3565b90506000670de0b6b3a764000085836108bc9190610e36565b6108c69190610ebf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190610f7d565b5050509150506402540be4008161096b9190610ff8565b915050919050565b8280548282559060005260206000209081019282156109ec579160200282015b828111156109eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610993565b5b5090506109f991906109fd565b5090565b5b80821115610a165760008160009055506001016109fe565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a5f610a5a610a5584610a1a565b610a3a565b610a1a565b9050919050565b6000610a7182610a44565b9050919050565b6000610a8382610a66565b9050919050565b610a9381610a78565b82525050565b6000602082019050610aae6000830184610a8a565b92915050565b600080fd5b6000610ac482610a1a565b9050919050565b610ad481610ab9565b8114610adf57600080fd5b50565b600081359050610af181610acb565b92915050565b600060208284031215610b0d57610b0c610ab4565b5b6000610b1b84828501610ae2565b91505092915050565b6000819050919050565b610b3781610b24565b82525050565b6000602082019050610b526000830184610b2e565b92915050565b610b6181610b24565b8114610b6c57600080fd5b50565b600081359050610b7e81610b58565b92915050565b600060208284031215610b9a57610b99610ab4565b5b6000610ba884828501610b6f565b91505092915050565b610bba81610ab9565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c22601b83610bdb565b9150610c2d82610bec565b602082019050919050565b60006020820190508181036000830152610c5181610c15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9282610b24565b9150610c9d83610b24565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cd257610cd1610c58565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1782610b24565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4a57610d49610c58565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d9f600083610d84565b9150610daa82610d8f565b600082019050919050565b6000610dc082610d92565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e00600b83610bdb565b9150610e0b82610dca565b602082019050919050565b60006020820190508181036000830152610e2f81610df3565b9050919050565b6000610e4182610b24565b9150610e4c83610b24565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8557610e84610c58565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eca82610b24565b9150610ed583610b24565b925082610ee557610ee4610e90565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f0f81610ef0565b8114610f1a57600080fd5b50565b600081519050610f2c81610f06565b92915050565b6000819050919050565b610f4581610f32565b8114610f5057600080fd5b50565b600081519050610f6281610f3c565b92915050565b600081519050610f7781610b58565b92915050565b600080600080600060a08688031215610f9957610f98610ab4565b5b6000610fa788828901610f1d565b9550506020610fb888828901610f53565b9450506040610fc988828901610f68565b9350506060610fda88828901610f68565b9250506080610feb88828901610f1d565b9150509295509295909350565b600061100382610f32565b915061100e83610f32565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104d5761104c610c58565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108a57611089610c58565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c7576110c6610c58565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561110457611103610c58565b5b82820290509291505056fea2646970667358221220c23deecee5463901ee9acfead149d2aa8a4246a2df497089fd6683d49974c75664736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610154578063b60d42881461017f578063be2693f014610189578063dba6335f146101a05761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af7146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610305565b6040516100ba9190610a99565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610af7565b61032b565b6040516100f79190610b3d565b60405180910390f35b34801561010c57600080fd5b50610115610343565b005b34801561012357600080fd5b5061013e60048036038101906101399190610b84565b610583565b60405161014b9190610bc0565b60405180910390f35b34801561016057600080fd5b506101696105c2565b6040516101769190610b3d565b60405180910390f35b6101876101cb565b005b34801561019557600080fd5b5061019e6105cf565b005b3480156101ac57600080fd5b506101b5610873565b6040516101c29190610bc0565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c38565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102999190610c87565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610473576000600182815481106103ee576103ed610cdd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046b90610d0c565b9150506103cb565b50600067ffffffffffffffff81111561048f5761048e610d55565b5b6040519080825280602002602001820160405280156104bd5781602001602082028036833780820191505090505b50600190805190602001906104d3929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fa90610db5565b60006040518083038185875af1925050503d8060008114610537576040519150601f19603f3d011682016040523d82523d6000602084013e61053c565b606091505b5050905080610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790610e16565b60405180910390fd5b50565b6001818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610654576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068e575b5050505050905060005b8151811015610762576000828281518110610700576106ff610cdd565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075a90610d0c565b9150506106e2565b50600067ffffffffffffffff81111561077e5761077d610d55565b5b6040519080825280602002602001820160405280156107ac5781602001602082028036833780820191505090505b50600190805190602001906107c2929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e990610db5565b60006040518083038185875af1925050503d8060008114610826576040519150601f19603f3d011682016040523d82523d6000602084013e61082b565b606091505b505090508061086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690610e16565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108a3836108d3565b90506000670de0b6b3a764000085836108bc9190610e36565b6108c69190610ebf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190610f7d565b5050509150506402540be4008161096b9190610ff8565b915050919050565b8280548282559060005260206000209081019282156109ec579160200282015b828111156109eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610993565b5b5090506109f991906109fd565b5090565b5b80821115610a165760008160009055506001016109fe565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a5f610a5a610a5584610a1a565b610a3a565b610a1a565b9050919050565b6000610a7182610a44565b9050919050565b6000610a8382610a66565b9050919050565b610a9381610a78565b82525050565b6000602082019050610aae6000830184610a8a565b92915050565b600080fd5b6000610ac482610a1a565b9050919050565b610ad481610ab9565b8114610adf57600080fd5b50565b600081359050610af181610acb565b92915050565b600060208284031215610b0d57610b0c610ab4565b5b6000610b1b84828501610ae2565b91505092915050565b6000819050919050565b610b3781610b24565b82525050565b6000602082019050610b526000830184610b2e565b92915050565b610b6181610b24565b8114610b6c57600080fd5b50565b600081359050610b7e81610b58565b92915050565b600060208284031215610b9a57610b99610ab4565b5b6000610ba884828501610b6f565b91505092915050565b610bba81610ab9565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c22601b83610bdb565b9150610c2d82610bec565b602082019050919050565b60006020820190508181036000830152610c5181610c15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9282610b24565b9150610c9d83610b24565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cd257610cd1610c58565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d1782610b24565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d4a57610d49610c58565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d9f600083610d84565b9150610daa82610d8f565b600082019050919050565b6000610dc082610d92565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e00600b83610bdb565b9150610e0b82610dca565b602082019050919050565b60006020820190508181036000830152610e2f81610df3565b9050919050565b6000610e4182610b24565b9150610e4c83610b24565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8557610e84610c58565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eca82610b24565b9150610ed583610b24565b925082610ee557610ee4610e90565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f0f81610ef0565b8114610f1a57600080fd5b50565b600081519050610f2c81610f06565b92915050565b6000819050919050565b610f4581610f32565b8114610f5057600080fd5b50565b600081519050610f6281610f3c565b92915050565b600081519050610f7781610b58565b92915050565b600080600080600060a08688031215610f9957610f98610ab4565b5b6000610fa788828901610f1d565b9550506020610fb888828901610f53565b9450506040610fc988828901610f68565b9350506060610fda88828901610f68565b9250506080610feb88828901610f1d565b9150509295509295909350565b600061100382610f32565b915061100e83610f32565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561104d5761104c610c58565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561108a57611089610c58565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110c7576110c6610c58565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561110457611103610c58565b5b82820290509291505056fea2646970667358221220c23deecee5463901ee9acfead149d2aa8a4246a2df497089fd6683d49974c75664736f6c63430008080033",
    "devdoc": {
        "author": "Drachen",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "This contract is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 59,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
